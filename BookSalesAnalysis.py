# -*- coding: utf-8 -*-
"""BookSales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yE80gEzCOL7klT4YOk32QGG22Rbz1y2W

***Overview
This report provides an analysis of book sales data, examining trends in publishing years, genres, authors, and overall sales performance.***

Key Findings:<br>
Top Authors by Gross Sales:
<br>Authors with the highest gross sales have consistently published books in high-demand genres.
[Insert specific names and their gross sales]

<br>Most Popular Genres:[Insert popular genres based on units sold or ratings].
These genres appeal to [specific target audience].

<br>Publishing Year Trends:Sales peaked during [insert years or decades] due to [possible reasons, e.g., increased publication or popularity of specific genres].
Declining or rising trends in sales are observed for specific periods.

<br>Revenue Insights:Publishers with the highest revenue: [Insert top publishers].
Revenue growth or decline patterns: [Insights into sales trends].

***Import Libraries***
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Books_Data_Clean.csv')

df.head(3)

df.tail(3)

df.describe()

df = df[df["Publishing Year"] > 1900]

df.isna().sum()

df.dropna(subset="Book Name", inplace=True)

df.duplicated().sum()

df.nunique()

plt.hist(df["Publishing Year"])
plt.xlabel("Publishing Year")
plt.ylabel("Frequency")
plt.title("Distribution of Publishing Year in Books")
plt.show()

df["genre"].value_counts().plot(kind = "bar", color=plt.cm.Set1(range(10)))
plt.xlabel("Genre")
plt.ylabel("No of Books")
plt.title("Number of Books in Each Genre")
plt.show()

df.groupby("Author")["Book_average_rating"].mean().sort_values(ascending=False)

sns.boxplot(x ="genre", y = "Book_average_rating", data = df,hue="genre", palette="Set2")
plt.xlabel("Genre")
plt.ylabel("Book Rating Count")
plt.title("Book Rating of Books in Each Genre")
plt.show()

plt.scatter(df["sale price"],df["units sold"])
plt.xlabel("Sale Price")
plt.ylabel("Units Sold")
plt.title("Relationship between Sale Price and Units Sold")
plt.show()

language_count = df["language_code"].value_counts()

plt.pie(language_count, labels=language_count.index, startangle=90, autopct='%1.1f%%')
plt.title("Distribution of Books by Language")
plt.show()

df.columns

df.columns = df.columns.str.strip()  # This removes leading and trailing spaces

df.groupby("Publisher")["publisher revenue"].sum().sort_values(ascending=False)

df.groupby("Author_Rating")["Book_ratings_count"].mean().sort_values(ascending=False).max()

df.groupby("language_code").size().sort_values(ascending=False)

df.groupby("Author_Rating")["Book_ratings_count"].var()

plt.scatter(df["Book_average_rating"],df["Book_ratings_count"])
plt.xlabel("Book Average Rating")
plt.ylabel("Book Rating Count")
plt.title("Relationship between Book Average Rating and Book Rating Count")
plt.show()

total_gross_sales_by_author = df.groupby("Author")["sale price"].sum()

total_gross_sales_by_author.sort_values(ascending=False).head(20).plot(
    kind="bar", color=plt.cm.Paired.colors)
plt.xlabel("Author")
plt.ylabel("Total Gross Sales")
plt.title("Total Gross Sales by Author")
plt.show()

sns.boxplot(x="Author_Rating",y="units sold",data=df)
plt.xlabel("Author Rating")
plt.ylabel("Units Sold")
plt.title("Relationship between Author Rating and Units Sold")
plt.show()

df = df[df["Publishing Year"] <= 2020]
# Group and plot
df.groupby("Publishing Year")["units sold"].sum().plot(kind="line", marker="o")
# Set x-axis range and custom ticks
plt.xlim(1900, 2020)  # Define the range for the x-axis
plt.xticks([1900, 1920, 1940, 1960, 1980, 2000, 2020])  # Set specific ticks
# Add labels and title
plt.xlabel("Publishing Year")
plt.ylabel("Total Units Sold")
plt.title("Total Units Sold by Publishing Year")
# Display the plot
plt.show()

"""***Conclusion
The analysis indicates that Publishers and authors focusing on high-demand genres and leveraging effective marketing strategies have performed well.***
"""